const form = document.getElementsByClassName("my-form");
const loader = document.getElementById('loader');
const socket = new WebSocket('ws://localhost:5000/long-process');

document.getElementById('myForm').addEventListener('submit', function(event) {
    event.preventDefault(); 
    loader.style.display = 'block'; 
    socket.send(JSON.stringify({ status: 'form_submitted' }));            
    this.submit();
});

socket.onopen = function(event) {
    loader.style.display = 'block';
};

socket.onmessage = function(event) {
const data = JSON.parse(event.data);
console.log('Received message:', data);

if (data.status === 'complete') {
    loader.style.display = 'none';
}
};

socket.onerror = function(error) {
console.error('WebSocket error:', error);
};

@sockets.route('/long-process')
def long_process(ws):
    for i in range(1, 11):
        time.sleep(1)
        ws.send(json.dumps({'status': 'progress', 'message': f'Processing step {i}/10...'}))
    ws.send(json.dumps({'status': 'complete', 'message': 'Processing complete.'}))


server = pywsgi.WSGIServer(('localhost', 5000), app, handler_class=WebSocketHandler)
print("Server running at http://localhost:5000")
server.serve_forever()


#loader {
  display: none;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 9999;
}




for model in algo:
        if model == "Generative Adversarial Networks(GAN)":
            subplot = list()
            gan_model = GAN(dataset)
            gan_model.train(epochs=50, batch_size=32)
            gan_res = gan_model.test()
            selected_algo[model] = gan_res
            subplot.append(plot_model.gen_auc_plot(gan_res))
            subplot.append(plot_model.gen_confusion_matrix(gan_res))
            plots[model] = subplot
        
        elif model == "Local Outlier Factor(LOF)":
            subplot = list()
            lof_model = Lof(dataset)
            lof_res = lof_model.train_test()
            selected_algo[model] = lof_res
            subplot.append(plot_model.gen_auc_plot(lof_res))
            subplot.append(plot_model.gen_confusion_matrix(lof_res))
            plots[model] = subplot

        elif model == "Isolation Forest(IForest)":
            subplot = list()
            iforest_model = iForest(dataset)
            iforest_res = iforest_model.train_test()
            selected_algo[model] = iforest_res
            subplot.append(plot_model.gen_auc_plot(iforest_res))
            subplot.append(plot_model.gen_confusion_matrix(iforest_res))
            plots[model] = subplot

        elif model == "AutoEncoders":
            subplot = list()
            auto_model = AutoEncoder(dataset)
            auto_model.build_model()
            auto_res = auto_model.train_test(epochs=50, batch_size=64)
            selected_algo[model] = auto_res
            subplot.append(plot_model.gen_auc_plot(auto_res))
            subplot.append(plot_model.gen_confusion_matrix(auto_res))
            plots[model] = subplot

        elif model == "DevNet":
            subplot = list()
            devnet_model = Devnet(dataset)
            devnet_res = devnet_model.train_test(epochs=10)
            selected_algo[model] = devnet_res
            subplot.append(plot_model.gen_auc_plot(devnet_res))
            subplot.append(plot_model.gen_confusion_matrix(devnet_res))
            plots[model] = subplot

        elif model == "Elliptic Envelope":
            subplot = list()
            env_model = ellipticEnvelope(dataset)
            env_res = env_model.train_test()
            selected_algo[model] = env_res
            subplot.append(plot_model.gen_auc_plot(env_res))
            subplot.append(plot_model.gen_confusion_matrix(env_res))
            plots[model] = subplot

        elif model == "DAGMM":
            subplot = list()
            dagmm_model = Dagmm1(dataset)
            dagmm_res = dagmm_model.train_test()
            selected_algo[model] = dagmm_res
            subplot.append(plot_model.gen_auc_plot(dagmm_res))
            subplot.append(plot_model.gen_confusion_matrix(dagmm_res))
            plots[model] = subplot

        elif model == "Quantile Regression":
            subplot = list()
            qreg_model = QReg(dataset)
            qreg_model.build_model()
            qreg_res = qreg_model.train_test()
            selected_algo[model] = qreg_res
            subplot.append(plot_model.gen_auc_plot(qreg_res))
            subplot.append(plot_model.gen_confusion_matrix(qreg_res))
            plots[model] = subplot

        elif model == "Long Short Term Memory(LSTM)":
            subplot = list()
            lstm_model = Lstm(dataset)
            lstm_model.build_model()
            lstm_res = lstm_model.train_test(epochs=50, batch_size=64)
            selected_algo[model] = lstm_res
            subplot.append(plot_model.gen_auc_plot(lstm_res))
            subplot.append(plot_model.gen_confusion_matrix(lstm_res))
            plots[model] = subplot

        elif model == "MGBTAI":
            subplot = list()
            mgbtai_model = MGBTAI(dataset)
            mgbtai_model.train()
            mgbtai_res = mgbtai_model.test()
            selected_algo[model] = mgbtai_res
            subplot.append(plot_model.gen_auc_plot(mgbtai_res))
            subplot.append(plot_model.gen_confusion_matrix(mgbtai_res))
            plots[model] = subplot

        elif model == "DBTAI":
            subplot = list()
            dbtai_model = DBTAI(dataset)
            dbtai_model.train()
            dbtai_res = dbtai_model.test()
            selected_algo[model] = dbtai_res
            subplot.append(plot_model.gen_auc_plot(dbtai_res))
            subplot.append(plot_model.gen_confusion_matrix(dbtai_res))
            plots[model] = subplot
        
        else:
            return render_template("visualize.html", error="Some error occured", algos=ALGO)
        



.navbar {
  color: white; /* Set the color of the text inside the navbar to white */
}

.navbar a {
  color: white; /* Set the color of the links inside the navbar to white */
}

.header {
  color: white;
  /* Set the color of the text to white */
}
.container {
  color: white; /* Set the color of the text inside the container to white */
}

.container h1 {
  color: white; /* Set the color of the h1 elements inside the container to white */
}

.form-item {
  margin-bottom: 20px;
}
.card {
  --background: linear-gradient(to left, #6c0e40 0%, #041a87 100%);
  width: 230px;
  height: 265px;
  padding: 5px;
  border-radius: 1rem;
  box-shadow: 0 4px 8px rgba(161, 15, 15, 2);
  transition: transform 0.3s, box-shadow 0.3s;
  overflow: visible;
  background: #f7ba2b;
  background: var(--background);
  position: relative;
  z-index: 1;
  
 }
 .nav-links {
  display: flex; /* Use flexbox to align items */
  gap: 10px; /* Add gap between buttons */
  vertical-align: middle;
  align-items: center;
  
}
 .nav-link {
  margin-top: 20px;
  display: inline-block;
  padding: 10px 20px; /* Adjust padding to increase button size */
  /* background-color: #e0b010; Set button background color */
  color: #fff; /* Set button text color */
  text-decoration: none; /* Remove default underline */
  border: none; /* Remove border */
  border-radius: 5px; /* Add border radius for rounded corners */
  transition: background-color 0.3s; /* Smooth transition for hover effect */
  margin-right: 20px; /* Add some margin between buttons */
  text-align: center; /* Center the text horizontally */
  width: 150px; /* Set fixed width for the buttons */
  height: 60px; /* Set fixed height for the buttons */
  line-height: 40px; /* Align text vertically in the center */

  
}

.nav-link:hover {
  background-color: #373738; /* Change background color on hover */
}

 /* .card::after {
  position: absolute;
  content: "";
  top: 30px;
  left: 0;
  right: 0;
  z-index: -1;
  height: 100%;
  width: 100%;
  transform: scale(0.8);
  filter: blur(25px);
  background: #f7ba2b;
  background: var(--background);
  transition: opacity .5s;
 } */
 .card-container {
  display: flex;
  justify-content: center; /* Horizontally center the cards */
  align-items: center; /* Vertically center the cards */
  gap: 60px;
}
  .card-info {
  --color: #181818;
  background: var(--color);
  color: var(--color);
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100%;
  overflow: visible;
  border-radius: .7rem;
 
  text-align: center; /* Center the text horizontally */
}
.card:hover {
  transform: scale(1.1); /* Enlarge the card being hovered */
  /* transform: translateY(-5px); */

  box-shadow: 0 8px 16px rgba(161, 15, 15, 2); /* Make the shadow more prominent */
}
.card:hover .title {
  color: #2eb7f2;
}
 
 
.card .title {
  font-weight: bold;
  letter-spacing: .1em;
  color:white;
 }

 /*Hover*/
 /* .card:hover::after {
  opacity: 0;
 }
 
 .card:hover .card-info {
  color: #f7ba2b;
  transition: color 1s;
 } */

/* Assuming your video element has the id 'background-video' */


button {
  position: relative;
	@@ -226,11 +362,11 @@ button {
  font-family: inherit;
&.learn-more {
    font-weight: 600;
    color: white;
    text-transform: uppercase;
    padding: 1.25em 2em;
    background: #fff0f0;
    border: 2px solid #f2f0f1;
    border-radius: 0.75em;
    transform-style: preserve-3d;
    transition: transform 150ms cubic-bezier(0, 0, 0.58, 1), background 150ms cubic-bezier(0, 0, 0.58, 1);
	@@ -243,9 +379,9 @@ button {
      left: 0;
      right: 0;
      bottom: 0;
      background: white;
      border-radius: inherit;
      box-shadow: 0 0 0 2px #f8f6f7, 0 0.625em 0 0 #ffe3e2;
      transform: translate3d(0, 0.75em, -1em);
      transition: transform 150ms cubic-bezier(0, 0, 0.58, 1), box-shadow 150ms cubic-bezier(0, 0, 0.58, 1);
    }
	@@ -261,7 +397,7 @@ button {
      background: #ffe9e9;
      transform: translate(0em, 0.75em);
      &::before {
        box-shadow: 0 0 0 2px rgb(252, 248, 249), 0 0 #ffe3e2;
        transform: translate3d(0, 0, -1em);
      }
    }


<video autoplay muted loop id="background-video">
        <source src="{{ url_for('static', filename='video1.mp4') }}" type="video/mp4">
        Your browser does not support the video tag.
    </video> -->
    <!-- <div class="card-container" >
        <div class="card">
            <div class="card-info">
                <h3 class="title">What is Anomaly Detection?</h3>
            </div>
        </div>
        
        <div class="card">
            <div class="card-info">
                <h3 class="title">More About Our Models</h3>
            </div>
        </div>
        
        <div class="card">
            <div class="card-info">
                <a href="/input_form"><h3 class="title">Result Visualization</h3></a>
            </div>
        </div>
        
        <div class="card">
            <div class="card-info">
                <a href="/visualizedata"><h3 class="title">Data Visualization</h3></a>
            </div>
        </div>
    </div>

select,
input[type="file"],
button {
  width: calc(100% - 20px); 
  padding: 15px; 
  margin-bottom: 15px; 
  border: 1px solid #ccc;
  border-radius: 4px;
  box-sizing: border-box;
}

button {
  position: relative;
  display: inline-block;
  cursor: pointer;
  outline: none;
  border: 0;
  vertical-align: middle;
  text-decoration: none;
  font-size: inherit;
  font-family: inherit;
&.learn-more {
    font-weight: 600;
    color: #382b22;
    text-transform: uppercase;
    padding: 1.25em 2em;
    background: #fff0f0;
    border: 2px solid #b18597;
    border-radius: 0.75em;
    transform-style: preserve-3d;
    transition: transform 150ms cubic-bezier(0, 0, 0.58, 1), background 150ms cubic-bezier(0, 0, 0.58, 1);
    &::before {
      position: absolute;
      content: '';
      width: 100%;
      height: 100%;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: #f9c4d2;
      border-radius: inherit;
      box-shadow: 0 0 0 2px #b18597, 0 0.625em 0 0 #ffe3e2;
      transform: translate3d(0, 0.75em, -1em);
      transition: transform 150ms cubic-bezier(0, 0, 0.58, 1), box-shadow 150ms cubic-bezier(0, 0, 0.58, 1);
    }
    &:hover {
      background: #ffe9e9;
      transform: translate(0, 0.25em);
      &::before {
        box-shadow: 0 0 0 2px #b18597, 0 0.5em 0 0 #ffe3e2;
        transform: translate3d(0, 0.5em, -1em);
      }
    }
    &:active {
      background: #ffe9e9;
      transform: translate(0em, 0.75em);
      &::before {
        box-shadow: 0 0 0 2px #b18597, 0 0 #ffe3e2;
        transform: translate3d(0, 0, -1em);
      }
    }
  }
}

# with concurrent.futures.ThreadPoolExecutor() as e:
    #     futures = []
    #     for model in algo:
    #         f = e.submit(train_model, algo, dataset, selected_algo, plots, model)
    #         futures.append(f)
        
    #     concurrent.futures.wait(futures)

<!-- <div class="my-form" id="opt-form">
        <input type="button" value="Univariate" id="uni-btn" onclick="showForm('uni')">
        <input type="button" value="Multivariate" id="multi-btn" onclick="showForm('multi')">
    </div> -->
    
<!-- <div class="my-form" id="multi-form" style="display: none;">
        <form action="/inputs" method="post" enctype="multipart/form-data">
            <div class="form-item">
                <label class="form-title" for="algo">Select Model(s) of your choice</label>
                {% for a in algos %}
                    <div class="checkbox-item">
                        <input type="checkbox" name="algo" value="{{ a }}">
                        <label for="{{ a }}">{{ a }}</label>
                    </div>
                {% endfor %}
                <div class="checkbox-item">
                    <input type="checkbox" id="select-all-checkbox" onclick="toggleCheckboxes()">
                    <label for="select-all-checkbox">Select All</label>
                </div>
            </div>
            <div class="form-item">
                <label for="file" class="form-title">Upload a dataset</label>
                <input type="file" name="dataset" accept=".csv">
            </div>
            <div class="form-item">
                <button type="submit" class="learn-more">Visualize Results</button>
            </div>
        </form>
    </div> -->

function showForm(option) {
    var opt1 = document.getElementById('uni-form')
    var opt2 = document.getElementById('multi-form')
    var opt = document.getElementById('opt-form')

    if (option == 'uni') {
        opt1.style.display = "block"
        opt2.style.display = "none"
        opt.style.display = "none"
    } else if (option == 'multi') {
        opt1.style.display = "none"
        opt2.style.display = "block"
        opt.style.display = "none"
    }
}

<div class="breadcrumb__text">
  <div class="row">
    <div class="col-lg-12 text-center">
      <div class="content" style="position: absolute; top: 8%; left: 50%; transform: translateX(-50%)">
        <h1>About Us</h1>
      </div>
    </div>
  </div>
</div>

 
<div class="responsive-container-block bigContainer">
    <div class="responsive-container-block Container">
      <p class="text-blk tc heading">
        Uncover Anomalies : Discover the Unseen.
      </p>
      <div class="text-blk subHeading">
        <div class="section-title">
            <span></span>
        </div>
      <p class="text-blk desc">
        Welcome to our anomaly detection hub, where the realms of data science and machine learning converge to unveil the hidden stories within datasets. A go-to destination for anomaly detection with desired machine learning algorithms. Explore anomalies at a glance! Upload your dataset and dive into dynamic visualizations showcasing machine learning-driven anomaly detection results. Once you've uploaded your dataset, our platform seamlessly integrates AI algorithms to detect anomalies and reveal patterns that may go unnoticed. The 'Visualize Results' section provides a dynamic and interactive environment to explore the outcomes of anomaly detection on your uploaded datasets.Gain instant insights, interpret trends, and uncover patterns with ease. Your data, visualized and understood like never before.
      </p>

      <p class="text-blk tc heading"; >
        OUR TEAM 
      </p>
      
<div class="row">
  <div class="column">
    <div class="card">
      <a href="#">
        <img src="static/images/user.jpg" alt="profile picture" style="width:100%">
      </a>
       <div class="container">
        <h2 >Nicole</h2>
      </div>
    </div>
  </div>

  <div class="column">
    <div class="card">
      <a href="#">
        <img src="static/images/user.jpg" alt="profile picture" style="width:100%">
    </a>
      <div class="container">
        <h2>Nitya</h2>
      </div>
    </div>
  </div>

  <div class="column">
    <div class="card">
      <a href="#">
        <img src="static/images/user.jpg" alt="profile picture" style="width:100%">
    </a>
      <div class="container">
        <h2>Rafath</h2>
      </div>
    </div>
  </div>

  <div class="column">
    <div class="card">
      <a href="#">
        <img src="static/images/user.jpg" alt="profile picture" style="width:100%">
    </a>
      <div class="container">
        <h2>Srushti</h2>
      </div>
    </div>
  </div>

  <div class="column">
    <div class="card">
      <a href="#">
        <img src="static/images/user.jpg" alt="profile picture" style="width:100%">
    </a>
      <div class="container">
        <h2>Varad</h2>
      </div>
    </div>
  </div>
</div>
</div>
</div>

.breadcrumb__text h1 {
  font-weight: bold;
  font-size: 80px;
}

.column {
  float: left;
  width: 33.3%;
  margin-bottom: 16px;
  padding: 0 8px;
}

.card {
  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
  margin: 8px;
}

.about-section {
  padding: 50px;
  text-align: center;
  background-color: #474e5d;
  color: white;
}

.container {
  padding: 0 16px;
}

.container::after, .row::after {
  content: "";
  clear: both;
  display: table;
}

.title {
  color: grey;
}

.button {
  border: none;
  outline: 0;
  display: inline-block;
  padding: 8px;
  color: white;
  background-color: #000;
  text-align: center;
  cursor: pointer;
  width: 100%;
}

.button:hover {
  background-color: #555;
}

.text-blk  {
  margin-bottom: 80px;
}

.column {
  float: left;
  width: 20%; 
  padding: 0 15px;
}

.row:after {
  content: "";
  display: table;
  clear: both;
}

/* @media screen and (max-width: 650px) {
  .column {
    width: 100%;
    display: block;
  }
} */

.text-blk {
  margin: 0px;
  padding: 0px;
  line-height: 25px;
  text-align: justify;
}

.responsive-container-block {
  min-height: 75px;
  height: fit-content;
  width: 100%;
  padding: 10px;
  display: flex;
  flex-wrap: wrap;
  margin-top: 0px;
  margin-right: auto;
  margin-bottom: 0px;
  margin-left: auto;
  justify-content: flex-start;
}

.responsive-container-block.bigContainer {
  padding: 10px 30px;
}
.responsive-container-block.Container {
  max-width: 1300px;
  flex-direction: column;
  align-items: center;
  padding: 20px;
  margin-top: 150px;
  margin-right: auto;
  margin-bottom: 15px;
  margin-left: auto;
  background: #939393;
  background: linear-gradient(to top, lightgrey 0%, lightgrey 1%, #e0e0e0 26%, #efefef 48%, #d9d9d9 75%, #bcbcbc 100%);
  border-radius: 40px;
}

.text-blk.heading {
  font-size: 36px;
  line-height: 45px;
  font-weight: 800;
  margin-top: 0px;
  margin-right: 0px;
  margin-bottom: 30px;
  margin-left: 0px;
}

.text-blk.subHeading {
  text-align: center;
  font-size: 18px;
  line-height: 26px;
  margin-top: 0px;
  margin-right: 0px;
  margin-bottom: 60px;
  margin-left: 0px;
}

.socialIcon {
  width: 33px;
  height: 33px;
}

.social-icons-container {
  display: flex;
  flex-direction: row;
  align-items: flex-start;
}

.social-icon {
  margin: 0 50px 0 50px;
}

.social-icon:hover {
  cursor: pointer;
}

@media (max-width: 768px) {
  .text-blk.heading {
    font-size: 55px;
    line-height: 65px;
  }

  .text-blk.subHeading {
    font-size: 18px;
    line-height: 24px;
  }

  .socialIcon {
    width: 20px;
    height: 20px;
  }

  .text-blk.subHeading {
    line-height: 27px;
  }

  .text-blk.heading {
    font-size: 32px;
    line-height: 40px;
    margin-top: 0px;
    margin-right: 0px;
    margin-bottom: 20px;
    margin-left: 0px;
  }

  .social-icon {
    margin: 0 25px 0 25px;
  }
}

@media (max-width: 500px) {
  .responsive-container-block.bigContainer {
    padding-top: 10px;
    padding-right: 20px;
    padding-bottom: 10px;
    padding-left: 20px;
  }

  .text-blk.heading {
    font-size: 45px;
    line-height: 55px;
    margin-top: 0px;
    margin-right: 0px;
    margin-bottom: 20px;
    margin-left: 0px;
  }

  .text-blk.subHeading {
    font-size: 14px;
    line-height: 22px;
    margin-top: 0px;
    margin-right: 0px;
    margin-bottom: 30px;
    margin-left: 0px;
  }

  .social-icons-container {
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
  }

  .text-blk.subHeading {
    font-size: 16px;
    line-height: 23px;
  }

  .text-blk.heading {
    font-size: 26px;
    line-height: 30px;
  }

  .social-icon {
    margin: 0 20px 0 20px;
  }
}

<footer class="footer">
        <div class="container">
            <!-- <div class="footer__top">
                <div class="row">
                    <div class="col-lg-6 col-md-6"></div>
                </div>
            </div> -->
        </div>
            <div class="footer__option">
                <div class="row">
                    <div class="col-lg-4 col-md-6 col-sm-6">
                        <div class="footer__option__item">
                            <a href="/about"><h5>About us</h5></a>
                            <p>Anomaly detection hub harnessing machine learning to uncover hidden patterns in datasets, providing dynamic visualizations for instant insights and trend interpretation. Upload your data and explore anomalies effortlessly!</p>
                        </div>
                    </div>
                    <div class="col-lg-2 col-md-3 col-sm-3">
                        <div class="footer__option__item">
                            <h5>We Have</h5>
                            <ul>
                                <li><a href="#">Home</a></li>
                                <li><a href="/about">About Us</a></li>
                            </ul>
                        </div>
                    </div>
                    <div class="col-lg-2 col-md-3 col-sm-3">
                        <div class="footer__option__item">
                            <h5>Our work</h5>
                            <ul>
                                <li><a href="/input_form">Result Visualizations</a></li>
                                <li><a href="/visualizedata">Data Visualizations</a></li>
                            </ul>
                        </div>
                    </div>
                    <div class="col-lg-4 col-md-12">
                        <div class="footer__option__item">
                            <h5>What we provide</h5>
                            <ul>
                                <li><a href="/learn_more">Learn more about our Models</a></li>
                                <li><a href="/dataset_char">Data characterization</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </footer>


.footer {
    background: #0e0c0c70;
  }
  
  .footer__top {
    padding: 30px 0;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  }
  
  .footer__top__logo {
    line-height: 40px;
  }
  .footer__top__logo a {
    display: inline-block;
  }
  
  .footer__top__social {
    text-align: right;
  }
  .footer__top__social a {
    display: inline-block;
    font-size: 15px;
    color: #ffffff;
    height: 40px;
    width: 40px;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 50%;
    line-height: 44px;
    text-align: center;
    margin-right: 6px;
  }
  .footer__top__social a:last-child {
    margin-right: 0;
  }
  
  .footer__option {
    padding-bottom: 35px;
    padding-top: 75px;
  }
  
  .footer__option__item {
    margin-bottom: 35px;
  }
  
  .footer__option__item h5 {
    color: #ffffff;
    font-weight: 700;
    margin-bottom: 35px;
  }
  
  .footer__option__item p {
    font-weight: 300;
    margin-bottom: 20px;
  }
  
  .footer__option__item .read__more {
    font-size: 16px;
    color: #ffffff;
  }
  
  .footer__option__item .read__more span {
    font-size: 16px;
    color: #ffffff;
    opacity: 0.5;
    position: relative;
    top: 4px;
    margin-left: 5px;
  }
  
  .footer__option__item ul li {
    list-style: none;
  }
  
  .footer__option__item ul li a {
    color: #adadad;
    font-size: 16px;
    font-weight: 300;
    line-height: 32px;
  }
  
  .footer__option__item form {
    position: relative;
  }
  
  .footer__option__item form input {
    height: 50px;
    width: 100%;
    padding-left: 20px;
    border: 1px solid #544E5E;
    background: transparent;
    font-size: 16px;
    color: #adadad;
  }
  .footer__option__item form input::-webkit-input-placeholder {
    color: #adadad;
  }
  .footer__option__item form input::-moz-placeholder {
    color: #adadad;
  }
  .footer__option__item form input:-ms-input-placeholder {
    color: #adadad;
  }
  .footer__option__item form input::-ms-input-placeholder {
    color: #adadad;
  }
  .footer__option__item form input::placeholder {
    color: #adadad;
  }
  .footer__option__item form button {
    font-size: 20px;
    color: #ffffff;
    border: none;
    height: 50px;
    width: 50px;
    background: #00bfe7;
    line-height: 50px;
    text-align: center;
    position: absolute;
    right: 0;
    top: 0;
  }
  
  .footer__copyright {
    border-top: 1px solid rgba(255, 255, 255, 0.1);
    padding: 30px 0;
  }
  
  .footer__copyright__text {
    margin-bottom: 0;
    font-weight: 300;
  }
  .footer__copyright__text i {
    color: #00bfe7;
  }
  .footer__copyright__text a {
    color: #00bfe7;
  }

  <div class="main-header">
    <h2>Dataset Insight : Exploring Dataset Characteristics</h2>
  <div class="responsive-container-block bigContainer">
    <div class="responsive-container-block Container">
      <p class="text-blk tc heading">
        
       <h5>Our anomaly detection benchmark study encompasses a wide-ranging compilation of datasets, thoughtfully curated from multiple sources, including the Very Large Databases (VLDB) repository, Yahoo Webscope S5, Machine Temperature Sensor datasets, AWS CloudWatch datasets, biological datasets, and datasets from the Singapore University of Technology and Design (SUTD). This expansive dataset collection establishes a solid foundation for a rigorous evaluation of anomaly detection methods across diverse domains, data types, and characteristics.</h5>
      </p>
      <div class="text-blk subHeading">
        <div class="section-title">
            <span></span>
        </div>
      <p class="text-blk desc">
        
    </p>
    </div>
  </div>
</div>
  <div class="responsive-container-block bigContainer">
    <div class="responsive-container-block Container">
      <p class="text-blk tc heading">
        Versatile VLDB Datasets
        <h5> The VLDB datasets encapsulate a broad spectrum of domains, each serving as a cornerstone for advancing research and development in their respective fields. These encompass healthcare (e.g., annthyroid, breastw, cardio), finance (fraud, campaign), network security (backdoor, smtp), image processing (celeba, optdigits, CIFAR10), natural language processing (Agnews, Imdb, Yelp), document analysis (PageBlocks, SpamBase, Stamps), linguistics (speech, vowels), astronomy (landsat, shuttle), biology (yeast, vertebral), physics (Waveform), chemistry (musk, wine), and more. By providing rich and diverse data sources, these datasets empower researchers, engineers, and practitioners to tackle complex challenges, drive innovation, and unlock new insights across a wide range of disciplines.</h5>
      </p>
      <div class="text-blk subHeading">
        <div class="section-title">
            <span></span>
        </div>
      <p class="text-blk desc">
        
      </p>
    </div>
  </div>
  <div class="responsive-container-block bigContainer">
    <div class="responsive-container-block Container">
      <p class="text-blk tc heading">
        Key Time-Series and Sensor Datasets for Algorithmic Anomaly Detection
        <h5> The AWS CloudWatch dataset, derived from the Numenta Anomaly Benchmark (NAB), offers time-series data on AWS server metrics like CPU utilization and disk write bytes. With 17 CSV files and anomalies injected synthetically, it's vital for evaluating anomaly detection algorithms. Sensor datasets (Sensor1, Sensor2) provide machine sensor data, with anomalies including planned shutdowns and catastrophic failures, contributing to algorithm efficacy testing amidst diverse real-world scenarios.</h5>
      </p>
      <div class="text-blk subHeading">
        <div class="section-title">
            <span></span>
        </div>
      <p class="text-blk desc">
        
      </p>
    </div>
  </div>
  <div class="responsive-container-block bigContainer">
    <div class="responsive-container-block Container">
      <p class="text-blk tc heading">
        Outlier Labeling Strategies in Biological Datasets for Classification
        <h5> The biological datasets provided are multiclass classification datasets where classes with limited instances are categorized as outliers. In the Lympho dataset, small classes are merged and considered outliers, while in the WBC dataset, the malignant class is downsampled for outlier designation. Similarly, in the Wine dataset, one class is downsized to outliers, and in the Ecoli dataset, minority classes are labeled as outliers. The CMC dataset, derived from a survey,with certain categories designated as outliers based on demographic and socio-economic characteristics.</h5>
      </p>
      <div class="text-blk subHeading">
        <div class="section-title">
            <span></span>
        </div>
      <p class="text-blk desc">
        
      </p>
    </div>
  </div>
  <div class="responsive-container-block bigContainer">
    <div class="responsive-container-block Container">
      <p class="text-blk tc heading">
        Yahoo Webscope: Anomaly Identification Catalyst
        <h5> The dataset provided by Yahoo through the Webscope program serves as a catalyst for advancing anomaly identification research. It comprises a blend of real-time and synthetic time-series data collected from Yahoo server web traffic. With four benchmark categories (A1 to A4), where A1 contains actual production traffic data and A2-A4 are synthetic datasets, anomalies in the A1 category are manually labeled. These datasets feature three fields: timestamps, values, and an indicator for anomalies (is_anomaly), marked with either 0 or 1. Our experimentation includes several datasets from the A1 benchmark (Yahoo Dataset1 to Yahoo Dataset3) and A2 benchmarks (Yahoo Dataset4 to Yahoo Dataset6), showcasing diverse distributions such as Weibull, Log-normal, and Gamma.</h5>
      </p>
      <div class="text-blk subHeading">
        <div class="section-title">
            <span></span>
        </div>
      <p class="text-blk desc">
        
      </p>
    </div>
  </div>